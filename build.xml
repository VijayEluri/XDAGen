<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="jar" name="XDAGen">

	<property name="jarbasename" value="xdagen"/>
	<property name="src.dir" location="src"/>
	<property name="lib.dir" location="lib"/>
	<property name="build.dir" location="build"/>
	<property name="examples.dir" location="examples"/>

	<!-- Resources to be copied into build.dir from src.dir with each compile. -->
	<property name="extra_src_resources_to_jar" value="**/*.java
		                                               **/templates/*"/>

	<target depends="" name="compile">

		<mkdir dir="${build.dir}"/>

		<javac debug="true" 
			   deprecation="true"
			   srcdir="${src.dir}"
			   destdir="${build.dir}"
			   target="1.6"
			   includeantruntime="false">
			<classpath>
				<fileset dir="${lib.dir}" includes="**/*.jar"/>
			</classpath>
		</javac>

		<!-- Copy other resources from source directory into build directory. -->
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" includes="${extra_src_resources_to_jar}"/>
		</copy>

	</target>


	<!-- jar -->
	<target name="jar"
		    depends="clean, compile"
		    description="generate module jar file">

		<jar jarfile="${jarbasename}.jar" basedir="${build.dir}" includes="**/*" excludes="${jarbasename}.jar" />

	</target>


	<!-- gen-example-output -->
	<target name="gen-example-output"
		    depends="clean, compile"
		    description="generate example query and xml schema">

		<!-- Generate XML Schema from example database metadata file, with inline xml element collections. -->
		<java classname="gov.fda.nctr.xdagen.DatabaseXmlSchemaGenerator" fork="true">

			<classpath path="${build.dir}">
				<fileset dir="${lib.dir}" includes="**/*.jar" />
			</classpath>

			<arg value="${examples.dir}/dbmd.xml" />
			<arg value="http://example/namespace" />
			<arg value="INLINE" /> <!-- inline element collections, without wrapper element -->
			<arg value="*all*" />
			<arg value="*all*" />
			<arg value="${examples.dir}/xmlschema_inline_el_colls.xsd" />
		</java>
		
		<!-- Generate XML Schema from example database metadata file, with wrapped element collections. -->
		<java classname="gov.fda.nctr.xdagen.DatabaseXmlSchemaGenerator" fork="true">

			<classpath path="${build.dir}">
				<fileset dir="${lib.dir}" includes="**/*.jar" />
			</classpath>

			<arg value="${examples.dir}/dbmd.xml" />
			<arg value="http://example/namespace" />
			<arg value="WRAPPED" /> <!-- wrapped element collections, without wrapper element -->
			<arg value="*all*" />
			<arg value="*all*" />
			<arg value="${examples.dir}/xmlschema_wrapped_el_colls.xsd" />
		</java>

		<!-- Generate example query from database metadata for passed table, with inline xml element collections. -->
		<java classname="gov.fda.nctr.xdagen.QueryGenerator" fork="true">

			<classpath path="${build.dir}">
				<fileset dir="${lib.dir}" includes="**/*.jar"/>
			</classpath>

			<arg value="ltkb.drug"/>
			<arg value="${examples.dir}/dbmd.xml"/>
			<arg value="INLINE"/>
			<arg value="${examples.dir}/drugs_query_inline_el_colls.sql"/>
		</java>

		
		<!-- Generate example query from database metadata for passed table, with inline xml element collections. -->
		<java classname="gov.fda.nctr.xdagen.QueryGenerator" fork="true">

			<classpath path="${build.dir}">
				<fileset dir="${lib.dir}" includes="**/*.jar"/>
			</classpath>

			<arg value="ltkb.drug"/>
			<arg value="${examples.dir}/dbmd.xml"/>
			<arg value="WRAPPED"/>
			<arg value="${examples.dir}/drugs_query_wrapped_el_colls.sql"/>
		</java>

	</target>


	<!-- clean -->
	<target name="clean" description="clean up">
		<delete dir="${build.dir}" failonerror="false"/>
	</target>

</project>
