<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>gov.fda.nctr</groupId>
  <artifactId>xdagen</artifactId>
  <version>0.9.8.2</version>
  <name>Xml Data Access Generator</name>
  <description>Generates hierarchical SQL/XML queries and matching XML Schemas from simple table output specifications.</description>

  <distributionManagement>
    <snapshotRepository>
      <id>snapshots-repo</id>
      <url>http://ncsvmweb01.nctr.fda.gov/mvnrepo/content/repositories/snapshots</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
    <repository>
      <id>releases-repo</id>
      <url>http://ncsvmweb01.nctr.fda.gov/mvnrepo/content/repositories/releases</url>
    </repository>
  </distributionManagement>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.16</version>
    </dependency>
    <dependency>
      <groupId>gov.fda.nctr</groupId>
      <artifactId>dbmd</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>5.14</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>xmlunit</groupId>
        <artifactId>xmlunit</artifactId>
        <version>1.3</version>
    </dependency>
    <!-- Oracle driver must be downloaded and manually installed in the maven repo:
         mvn install:install-file -Dfile=ojdbc6.jar -Dpackaging=jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=11.2.0.2.0 -->
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>11.2.0.2.0</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>9.0-801.jdbc4</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.8</version>
        <configuration>
          <suiteXmlFiles>
            <suiteXmlFile>src/test/testng.xml</suiteXmlFile>
          </suiteXmlFiles>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Generate database metadata resources for testing if they don't already exist. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <id>generate-db-metadata-test-resources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="classpath_from_maven" refid="maven.test.classpath"/>
                <ant antfile="${basedir}/src/test/resources/gen_metadata.ant.xml">
                  <target name="generate-all-dbmds-and-schemas"/>
                </ant>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- TODO: Do these in Java instead as unit tests.
       Validate expected xml query results against the expected xml schemas.
        Other tests will guarantee that actual query results are the same as these
        expected ones.
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>1.0-beta-3</version>
        <executions>
          <execution>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <validationSets>
            <validationSet>
              <dir>src/test/resources/expected_results</dir>
              <includes>
                <include>drug_1_rowxml_inline_el_colls.xml</include>
                <include>drugs_listing_inline_el_colls.xml</include>
              </includes>
              <systemId>src/test/resources/xmlschema_INLINE_el_colls.xsd</systemId>
            </validationSet>
            <validationSet>
              <dir>src/test/resources/expected_results</dir>
              <includes>
                <include>drug_1_rowxml_wrapped_el_colls.xml</include>
                <include>drugs_listing_wrapped_el_colls.xml</include>
              </includes>
              <systemId>src/test/resources/xmlschema_WRAPPED_el_colls.xsd</systemId>
            </validationSet>
          </validationSets>
        </configuration>
      </plugin>
      -->
    </plugins>
  </build>

</project>